{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["const dot = (v1: number[], v2: number[]) =>\n  v1.reduce((scalar, _, i) => scalar + v1[i] * v2[i], 0);\nconst normalize = (v: number[]) => Math.sqrt(dot(v, v));\n\nfunction* optimizeGenerator(\n  init: number[],\n  lambda: (...args: number[]) => number,\n  maxIters = 50000,\n  rate = 0.001,\n  precision = 0.01\n): IterableIterator<{\n  coefficients: number[];\n  slopes: number[];\n  iter: number;\n}> {\n  let iter = 0;\n  let coefficients = init.slice();\n  let currentValue = lambda(...coefficients);\n\n  while (iter < maxIters) {\n    // Get slopes of next step\n    const slopes = coefficients.map((_, i) => {\n      const nextStep = coefficients.slice();\n      nextStep[i] += rate * 10;\n      const nextValue = lambda(...nextStep);\n\n      return (nextValue - currentValue) / (nextStep[i] - coefficients[i]);\n    });\n\n    // Update coefficient in reverse direction of slope with specified rate\n    coefficients = coefficients.map((a, i) => a + slopes[i] * -rate);\n    currentValue = lambda(...coefficients);\n\n    // Stop if all slopes' theta come close to precision\n    if (normalize(slopes) < precision) {\n      break;\n    }\n\n    yield { coefficients, iter, slopes };\n    iter++;\n  }\n\n  return coefficients;\n}\n\nexport default optimizeGenerator;\n"],"names":["normalize","v","Math","sqrt","v2","v1","reduce","scalar","_","i","optimizeGenerator","init","lambda","maxIters","rate","precision","iter","coefficients","slice","currentValue","slopes","map","nextStep","a"],"mappings":"AAAA,MAEMA,EAAaC,IAAgBC,OAAAA,KAAKC,MAFbC,EAEyBH,GAFvCI,EAEoCJ,GAD5CK,OAAO,CAACC,EAAQC,EAAGC,IAAMF,EAASF,EAAGI,GAAKL,EAAGK,GAAI,KAD1C,IAACJ,EAAcD,GAI3B,SAAUM,EACRC,EACAC,EACAC,EAAW,IACXC,EAAO,KACPC,EAAY,KAMZ,IAAIC,EAAO,EACPC,EAAeN,EAAKO,QACpBC,EAAeP,KAAUK,GAE7B,KAAOD,EAAOH,GAAU,CAEtB,MAAMO,EAASH,EAAaI,IAAI,CAACb,EAAGC,KAClC,MAAMa,EAAWL,EAAaC,QAI9B,OAHAI,EAASb,IAAa,GAAPK,GACGF,KAAUU,GAERH,IAAiBG,EAASb,GAAKQ,EAAaR,MAQlE,GAJAQ,EAAeA,EAAaI,IAAI,CAACE,EAAGd,IAAMc,EAAIH,EAAOX,IAAMK,GAC3DK,EAAeP,KAAUK,GAGrBjB,EAAUoB,GAAUL,EACtB,WAGI,CAAEE,aAAAA,EAAcD,KAAAA,EAAMI,OAAAA,GAC5BJ,IAGF,OAAOC"}