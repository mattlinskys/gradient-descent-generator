{"version":3,"file":"index.module.js","sources":["../src/index.ts"],"sourcesContent":["const dot = (v1: number[], v2: number[]) =>\n  v1.reduce((scalar, _, i) => scalar + v1[i] * v2[i], 0);\nconst normalize = (v: number[]) => Math.sqrt(dot(v, v));\n\nfunction* optimizeGenerator(\n  init: number[],\n  lambda: (...args: number[]) => number,\n  maxIters = 50000,\n  rate = 0.001,\n  precision = 0.01\n): IterableIterator<{\n  coefficients: number[];\n  slopes: number[];\n  iter: number;\n}> {\n  let iter = 0;\n  let coefficients = init.slice();\n  let currentValue = lambda(...coefficients);\n\n  while (iter < maxIters) {\n    // Get slopes of next step\n    const slopes = coefficients.map((_, i) => {\n      const nextStep = coefficients.slice();\n      nextStep[i] += rate * 10;\n      const nextValue = lambda(...nextStep);\n\n      return (nextValue - currentValue) / (nextStep[i] - coefficients[i]);\n    });\n\n    // Update coefficient in reverse direction of slope with specified rate\n    coefficients = coefficients.map((a, i) => a + slopes[i] * -rate);\n    currentValue = lambda(...coefficients);\n\n    // Stop if all slopes' theta come close to precision\n    if (normalize(slopes) < precision) {\n      break;\n    }\n\n    yield { coefficients, iter, slopes };\n    iter++;\n  }\n\n  return coefficients;\n}\n\nexport default optimizeGenerator;\n"],"names":["optimizeGenerator","normalize","v","Math","sqrt","v2","v1","reduce","scalar","_","i","init","lambda","maxIters","rate","precision","iter","coefficients","slice","currentValue","slopes","map","nextStep","a"],"mappings":"2CAIUA,GAFJC,EAAY,SAACC,UAAgBC,KAAKC,MAFbC,EAEyBH,GAFvCI,EAEoCJ,GAD5CK,OAAO,SAACC,EAAQC,EAAGC,UAAMF,EAASF,EAAGI,GAAKL,EAAGK,IAAI,KAD1C,IAACJ,EAAcD,GAI3B,SAAUL,EACRW,EACAC,EACAC,EACAC,EACAC,uGAFAF,IAAAA,EAAW,cACXC,IAAAA,EAAO,eACPC,IAAAA,EAAY,KAMRC,EAAO,EACPC,EAAeN,EAAKO,QACpBC,EAAeP,eAAUK,4IAb/B,GAiBUG,EAASH,EAAaI,IAAI,SAACZ,EAAGC,GAClC,IAAMY,EAAWL,EAAaC,QAI9B,OAHAI,EAASZ,IAAa,GAAPI,GACGF,eAAUU,GAERH,IAAiBG,EAASZ,GAAKO,EAAaP,MAIlEO,EAAeA,EAAaI,IAAI,SAACE,EAAGb,UAAMa,EAAIH,EAAOV,IAAMI,IAC3DK,EAAeP,eAAUK,KAGrBhB,EAAUmB,GAAUL,4DAIxB,gBAAM,CAAEE,aAAAA,EAAcD,KAAAA,EAAMI,OAAAA,GAlChC,OAmCIJ,IAnCJ,oDAeSA,EAAOH,qLAuBPI"}